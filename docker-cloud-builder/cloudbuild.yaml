steps:
  # Get the Docker Hub user ID from Secrets Manager and save it to a file
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: "bash"
    args: ["./docker-cloud-builder/getCredentials.sh"]

  # Log in to Docker Hub using the credentials obtained in the previous steps
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: "bash"
    args: ["-c", "docker login --username=$(cat ./UserID) --password=$(cat ./AccessToken)"]

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'harshavardhanj/docker-buildx:latest'
      - '-t'
      - 'harshavardhanj/docker-buildx:19.03.5-r0'
      - '-f'
      - './docker-cloud-builder/Dockerfile'
      - './docker-cloud-builder/.'

  # Pull buildx image from Docker Hub and build 'buildx' image with multi-arch support
  ### NOTE:
  ###     In the build step below, the `docker-buildx:latest` image is used to build
  ###     the `docker-buildx:latest` image with multi-arch support. Therefore, since
  ###     there is a cyclical dependency, before running this in Cloud Build, a working
  ###     version of the `docker-buildx:latest` image will need to be present in the
  ###     container registry(Docker Hub, in this case). The image will need to be built
  ###     either locally or elsewhere and pushed to the registry before the below step
  ###     can be run.
  #  - name: 'harshavardhanj/docker-buildx:latest'
  #    args:
  #      - 'buildx'
  #      - 'build'
  #      - '-t'
  #      - 'harshavardhanj/docker-buildx:latest'
  #      - '-t'
  #      - 'harshavardhanj/docker-buildx:19.03.5-r0'
  #      - '--platform'
  #      - 'linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/386,linux/arm/v7,linux/arm/v6'
  #      - '-f'
  #      - './docker-cloud-builder/Dockerfile'
  #      - '--push'
  #      - './docker-cloud-builder/.'

images: ['harshavardhanj/docker-buildx:latest', 'harshavardhanj/docker-buildx:19.03.5-r0']
timeout: "1500s"
#options:
#  machineType: 'N1_HIGHCPU_8'
