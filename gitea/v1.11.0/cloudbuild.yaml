steps:
  # Get the Docker Hub user ID from Secrets Manager and save it to a file
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'getCredentials'
    waitFor: ["-"]
    entrypoint: "bash"
    args: ["./gitea/getCredentials.sh"]

  # Log in to Docker Hub using the credentials obtained in the previous steps
  - name: 'gcr.io/cloud-builders/docker'
    id: 'dockerLogin'
    waitFor: ["getCredentials"]
    entrypoint: "bash"
    args: ["-c", "docker login --username=$(cat ./UserID) --password=$(cat ./AccessToken)"]

  # Build image with 'untested' tag using 'docker-buildx:stable' and push to Docker Hub
  - name: 'harshavardhanj/docker-buildx:stable'
    id: 'dockerBuildPush'
    waitFor: ["dockerLogin"]
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        entrypoint.sh build --build-arg BUILD_DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ) \
        --build-arg VCS_REF=$SHORT_SHA -t harshavardhanj/gitea:untested-1.11.0 \
        --cache-from harshavardhanj/gitea-untested-1.11.0 --pull \
        --push -f ./gitea/v1.11.0/Dockerfile ./gitea/v1.11.0/.

  # Test the container pushed in the previous step
  - name: "gcr.io/gcp-runtimes/container-structure-test"
    id: "containerTest"
    waitFor: ["dockerBuildPush"]
    args:
      - 'test'
      - '--pull'
      - '--image'
      - 'harshavardhanj/gitea:untested-1.11.0'
      - '--config'
      - './gitea/v1.11.0/container-structure-test.yaml'

  # Scanning the image with Trivy
  - name: 'aquasec/trivy'
    id: "trivyScan"
    waitFor: ["dockerBuildPush"]
    args:
      - '--severity'
      - 'HIGH,CRITICAL'
      - '--exit-code'
      - '1'
      - '--ignore-unfixed'
      - '--light'
      - '--no-progress'
      - 'harshavardhanj/gitea:untested-1.11.0'

  # Pull buildx image from Docker Hub and build 'gitea:1.11.0' image with multi-arch support
  - name: 'harshavardhanj/docker-buildx:latest'
    id: "dockerBuildxPush"
    waitFor: ["containerTest", "trivyScan"]
    entrypoint: "sh"
    args:
      - '-c'
      - |
        entrypoint.sh build --build-arg BUILD_DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ) \
        --build-arg VCS_REF=$SHORT_SHA -t harshavardhanj/gitea:1.11.0 \
        --platform linux/amd64,linux/arm64,linux/arm/v7 \
        --cache-from harshavardhanj/gitea:1.11.0 --pull -f ./gitea/v1.11.0/Dockerfile \
        --push ./gitea/v1.11.0/.

  # Get unique URL which is used to prompt MicroBadger to update image metadata.
  # The token, which is a part of the unique URL, is stored with Secrets Manager.
  # This step retrieves that secret and saves it to a file.
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'webhookSecret'
    waitFor: ["dockerBuildxPush"]
    entrypoint: 'sh'
    args: ["-c", "gcloud beta secrets versions access 1 --secret=gitea-microbadger-webhook >./microbadgerWebhook"]

  # Calling the webhook on Micro Badger in order to update image metadata
  - name: 'gcr.io/cloud-builders/curl'
    id: "microbadgerWebhook"
    waitFor: ["webhookSecret"]
    entrypoint: 'sh'
    args: ["-c", "curl -X POST https://hooks.microbadger.com/images/harshavardhanj/gitea/$(cat ./microbadgerWebhook)"]
timeout: "9000s"
#options:
#  machineType: 'N1_HIGHCPU_8'
